extends ../../_layout/_layout_template

include ../../_layout/_layout_mixins

block title
  title Getting Started Overview

block includes
  link(rel='stylesheet', href='css/tutorial.css')
  include ../../_layout/_layout_include_demo_scripts

block navbar
  +pageNavbar('Getting Started', true)

block content
  section
    :markdown-it
      #Getting Started with Knockback.js

      In essence, [Knockback.js](index.html) bridges the dynamic DOM bindings of [Knockout.js](http://knockoutjs.com/) with the models, computeds, and routers of [Backbone.js](http://documentcloud.github.com/backbone/). It also brings some other cool features like localization, default values, and nested view models!

      If you are more of JavaScript developer than a CoffeeScript hipster, check out the JavaScript language toggle for the site (at the top right) on many pages with code and live examples.

      #Tidbits

      * 'kb' and 'Knockback' can be used interchangeably

      * Knockback.js uses the following coding conventions: ClassName, functionName, property_name, 'constant string', "dynamic string", CONSTANT_NAME

      #Classes vs Factory Functions
      You will soon notice that there are different capitalizations for things like kb.viewModel(model, options) and kb.ViewModel. The reason is that to reduce the need of using `new` and to be more familiar with Knockout, there are factory methods that create the underlying classes.

      A factory function uses new to create a new instance:

    pre(data-for='cs').
      Knockback.viewModel = (model, options) -> return new Knockback.ViewModel(model, options)

    pre(data-for='js').
      Knockback.viewModel = function(model, options) { return new Knockback.ViewModel(model, options); };

    :markdown-it
      #Useful Resources

      Before you start with Knockback.js, we recommend you first get acquainted with Backbone.js and Knockout.js by reviewing their websites (above) and you could also look at these resources:

      * [Documentation of Backbone.js Todos app](http://documentcloud.github.com/backbone/docs/todos.html): but skip the section on views
      * [Live examples of Knockout.js](http://knockoutjs.com/examples/)
      * [Excellent video walking through Knockout.js](http://channel9.msdn.com/Events/MIX/MIX11/FRM08):
      * [Free eBook on Knockout.js](http://www.syncfusion.com/resources/techportal/ebooks/knockoutjs):

      For Knockback.js, also take a look at this [comparison table](index.html#comparison_table) between the libraries or this [blog entry](http://www.geekdave.com/?p=79) which provides a good introduction.

      #Topics

      You can find the various 'Getting Started' topics in the navigation bar above:

      * [Dependent Library Basics](getting_started_dependent_library_basics.html): quick overview of Backbone.js and Knockout.js topics relevant to Knockback.js
      * [Knockback Basics](getting_started_knockback_basics.html): shows you how to bind a Backbone.Model and Backbone.Collection to DOM elements
      * [Knockback Important Details](getting_started_knockback_important_details.html): an explanation of a few additional things you should know before diving in
      * [Views ViewModels Models](getting_started_views_view_models_models.html): a discussion on the relationship between Views/ViewModels/Models and whether you should you Backbone.Views (or not!)